
image:
  file: .gitpod.Dockerfile

# tasks for gitpod
tasks:
    # NodeJS work(commented out, use at your own risk)
  # - name: NodeJS 16
  #   init: |
  #     sh node.sh
  #     echo Installed latest version, serving in progress, please wait.
  #   command: node --version && npm --version 

  - name: Codedoc Deps
    init: |
      touch /tmp/.npm-lock
      sudo apt-get -y install curl software-properties-common 
      curl -sL https://deb.nodesource.com/setup_16.x | sudo bash - 
      sudo apt-get -y install nodejs 
      echo "NodeJS 16 installed, check the version"
      npm i -g @codedoc/cli
      npm i -g @codedoc/core
      codedoc update
      codedoc install
      echo "Updated, starting served site..."
      rm /tmp/.npm-lock


  - name: Server
    init: sleep 1 && while [ -f /tmp/.npm-lock ]; do sleep 1; done
    command: codedoc serve

  - name: GitHub CLI installation
    init: |
      touch /tmp/.ghcli-lock
      cd ~

      mkdir cli

      cd cli

      wget "https://github.com/cli/cli/releases/download/v2.0.0/gh_2.0.0_linux_amd64.deb"
      rm /tmp/.ghcli-lock

      sleep 1 && while [ -f /tmp/.npm-lock ]; do sleep 1; done

      sudo dpkg --install gh_2.0.0_linux_amd64.deb

      echo "Now that you have GitHub CLI, you must login to your CLI or it is a piece of crap."

      echo "Copy the Auth token(8 digit+letter but totally 8-digit), open in browser, and go to github.com/login/device, place your code, authenticate and you are logged in :)"

      gh auth login

    command: echo Installed, now use it.
  - name: Kubernetes+Helm=Coder
    command: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      kubectl version --client
      curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
      sudo apt-get install apt-transport-https --yes
      echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
      sudo apt-get update
      sudo apt-get install helm
      curl -fsSL https://coder.com/try.sh | PORT="80" sh -s --

      

vscode:
  extensions:
    - leandro-rodrigues.fluent-ui-vscode
    - miguelsolorio.fluent-icons
    - pkief.material-icon-theme

    - ms-azuretools.vscode-docker
    
    
    

# - name: ngrok SSH Tunnel
#   command: |
#       echo "Starting the Shell Script!"
#       sh ngrok.sh
# test    
#  - name: TCP Tunnel
#  command: chisel server --socks5
# - name: SSH Server
#   command: |
#    [ -f /workspace/dropbear.hostkey ] || dropbearkey -t rsa -f /workspace/dropbear.hostkey
#     dropbear -r /workspace/dropbear.hostkey -F -E -s -p 2222 -P ~/dropbear.pid
# - command: |
#      mkdir -p ~/.ssh && open ~/.ssh/authorized_keys
#       clear
#    echo "=============="
#     echo " INSTRUCTIONS "
#      echo "=============="
#    echo ""
#    echo "1. Add your public SSH key to ~/.ssh/authorized_keys of this Gitpod workspace"
#     echo ""
#      echo "2. Install Chisel on your local machine, e.g. curl https://i.jpillora.com/chisel! | bash"
#      echo "   see https://github.com/jpillora/chisel"
#   echo ""
#    echo "3. Connect via SSH from your local machine:"
#     echo "   ssh -o ProxyCommand='chisel client $(gp url 8080) stdio:%h:%p' gitpod@localhost -p 2222"
#      echo ""
ports:
 - port: 3000
# test ends here
# GitHub
github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: true
# enable for all branches in this repo (defaults to false)
    branches: true
# enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
# enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: true
# add a "Review in Gitpod" button as a comment to pull requests (defaults to true)
    addComment: true
# add a "Review in Gitpod" button to pull requests (defaults to false)
    addBadge: true
# add a label once the prebuild is ready to pull requests (defaults to false)
    addLabel: prebuilt-in-gitpod

